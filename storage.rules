rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isSignedIn() && firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isValidContentType() {
      return request.resource.contentType.matches('image/.*') ||
             request.resource.contentType.matches('application/pdf') ||
             request.resource.contentType.matches('video/.*');
    }
    
    function isFileSizeValid() {
      return request.resource.size < 100 * 1024 * 1024; // 100MB max
    }
    
    // Course materials (images, PDFs, videos)
    match /courses/{courseId}/{fileName} {
      allow read: if isSignedIn();
      allow write: if isAdmin() && isValidContentType() && isFileSizeValid();
    }
    
    // Document files (PDFs)
    match /documents/{documentId}/{fileName} {
      allow read: if isSignedIn();
      allow write: if isAdmin() && 
                   request.resource.contentType.matches('application/pdf') && 
                   isFileSizeValid();
    }
    
    // User profile pictures
    match /users/{userId}/profile/{fileName} {
      allow read: if isSignedIn();
      allow write: if request.auth.uid == userId && 
                   request.resource.contentType.matches('image/.*') &&
                   request.resource.size < 5 * 1024 * 1024; // 5MB max
    }
  }
}
